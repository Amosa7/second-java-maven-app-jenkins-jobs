#!/usr/bin/env groovy

def gv

pipeline {
    tools {
        maven "maven-3.9"
    }
    agent any
    stages {

        stage("init") {
            steps {
                script {
                    gv = load "script.groovy"
                }
            }
        }

        stage("Version Increment") {
            steps {
                script {
                    echo "Incrementing app version... "
                    sh "mvn build-helper:parse-version versions:set \
                        -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nxtIncrementalVersion} \
                        version:commit"
                    def matcher = readfile("pom.xml") =~ "<version>(.+)</version>"
                    def version = matcher[0][1]
                    env.IMAG_NAME "$version-$BUILD_NUMBER"
                }
            }
        }

        stage("BuildApp") {
            steps {
                script {
                    echo "Building the application JAr"
                    sh "mvn clean package"
                }
            }
        }

        stage("Testing") {
            steps {
                script {
                    gv.Testing()
                }
            }
        }

        stage("Build and Push Image") {
            steps {
                script {
                    echo "building docker image of the appliction docker Image..."
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-repo2', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh "docker build -t amosa77/demo-app:${IMAG_NAME} ."
                        sh "echo $PASSWORD | docker login -u $USERNAME --password-stdin"
                        sh "docker push amosa77/demo-app:${IMAG_NAME}"
                    }  
                }
            }
        }

        stage("DeployJAr") {
            steps {
                script {
                    gv.DeployJAr()
                }
            }
        }
    }
}
